
stages:
  - deploy
  - verify

variables:
  KUBECONFIG: /root/.kube/config

before_script:
  - echo "Checking Kubernetes config:"
  - ls -la /home/ubuntu/.kube/
  - cat /home/ubuntu/.kube/config
  - export KUBECONFIG=/root/.kube/config
  - echo "Using KUBECONFIG:$KUBECONFIG"
  - apk add --no-cache curl
  - curl -LO "https://dl.k8s.io/release/v1.31.0/bin/linux/amd64/kubectl"
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/
  
  - mkdir -p /root/.kube
  
  - cp /home/ubuntu/.kube/config /root/.kube/config
  - cp /home/ubuntu/.minikube/profiles/minikube/client.crt /root/.kube/client.crt
  - cp /home/ubuntu/.minikube/profiles/minikube/client.key /root/.kube/client.key
  - cp /home/ubuntu/.minikube/ca.crt /root/.kube/ca.crt
  
  - kubectl config set-cluster minikube --server=https://192.168.49.2:8443
  - kubectl config set-context minikube --cluster=minikube --user=minikube --namespace=default
  - kubectl config use-context minikube
  
  - kubectl config view
  - kubectl get nodes

deploy:
  stage: deploy
  image: 
    name: alpine/helm:latest
    entrypoint: [""]
  script:
    - helm upgrade --install monitoring ./helm-app/prometheus-grafana -f ./helm-app/prometheus-grafana/values.yaml --namespace monitoring --create-namespace
    - helm upgrade --install tweet-app ./helm-app/tweet-app -f ./helm-app/tweet-app/values.yaml --namespace default --create-namespace
  only:
    - main