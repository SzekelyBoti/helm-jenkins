# Prometheus configuration
prometheus:
  prometheusSpec:
    replicas: 1
    image:
      tag: "2.44.0"
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    additionalScrapeConfigs:
      name: prometheus-config
      key: prometheus.yml
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    service:
      type: ClusterIp
      ports:
        - name: web
          port: 9090
          targetPort: 9090
          nodePort: 30990
        
# Grafana configuration
grafana:
  enabled: true
  adminPassword: "admin"
  service:
    type: ClusterIp
    ports:
      - name: http
        port: 80
        targetPort: 3000
        nodePort: 32426
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Nginx configuration
nginx:
  enabled: true
  replicaCount: 1
  service:
    type: ClusterIp
    ports:
      - name: http
        port: 80
        targetPort: 80
        nodePort: 32377
      - name: metrics
        port: 9113
        targetPort: 9113
        nodePort: 32378
  deployment:
    containers:
      - name: nginx
        image: boti95/linux_tweet_app:2.0
        ports:
          - containerPort: 80
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:0.11.0
        args:
          - -nginx.scrape-uri=http://127.0.0.1/status
        ports:
          - containerPort: 9113
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
            
## Prometheus ServiceMonitor for Nginx exporter
#serviceMonitors:
#  - name: "nginx"
#    namespaceSelector: {}
#    selector:
#      matchLabels:
#        app: nginx
#    endpoints:
#      - port: metrics
#        path: /metrics
#        interval: 30s
